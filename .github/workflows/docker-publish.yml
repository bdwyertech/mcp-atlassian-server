name: Build and Push Docker image to GHCR

on:
  push:
    branches: [ main ]
  workflow_dispatch: # Allows manual triggering from the Actions tab
  # schedule:
  #   - cron: '0 3 * * *'  # Runs daily at 3:00 UTC

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write  # Required for provenance metadata
      security-events: write # For Scan results

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU (for multi-arch builds)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set short SHA
        id: upstream_sha
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Check if image with short SHA exists in GHCR
        id: check_image
        env:
          GHCR_REPO: ghcr.io/${{ github.repository_owner }}/mcp-atlassian-server
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG=${{ steps.upstream_sha.outputs.short_sha }}
          REPO=${{ github.repository_owner }}/mcp-atlassian-server
          EXISTS=$(curl -s -H "Authorization: Bearer $GH_TOKEN" \
            "https://ghcr.io/v2/$REPO/manifests/$TAG" | grep -c 'errors')
          if [ "$EXISTS" = "0" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Docker image (multi-arch, tagged with SHA)
        if: steps.check_image.outputs.exists == 'false'
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/mcp-atlassian-server:latest
            ghcr.io/${{ github.repository_owner }}/mcp-atlassian-server:${{ steps.upstream_sha.outputs.short_sha }}
          build-args: |
            UPSTREAM_SHA=${{ steps.upstream_sha.outputs.sha }}
          platforms: linux/amd64,linux/arm64
          provenance: true
          sbom: true

      - name: Run Trivy vulnerability scanner
        if: steps.check_image.outputs.exists == 'false'
        uses: aquasecurity/trivy-action@0.30.0
        with:
          image-ref: ghcr.io/${{ github.repository_owner }}/mcp-atlassian-server:${{ steps.upstream_sha.outputs.short_sha }}
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
  
      - name: Upload Trivy scan results to GitHub Security tab
        if: steps.check_image.outputs.exists == 'false'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
          category: 'container-security'
